{
  "address": "0x998effB5725812f5f2cFdF87f10Bd9ae96dAf1d8",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_MFI",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialRewardPerBlock",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_roles",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "MFI",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "add2RewardTarget",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cumulativeReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastCumulativeUpdateBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "removeFromRewardTarget",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardTarget",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rewardPerBlock",
          "type": "uint256"
        }
      ],
      "name": "setTotalRewardPerBlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakeAccounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stakeAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stakeWeight",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "cumulativeStart",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lockEnd",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakeToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalCurrentRewardPerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalCurrentWeights",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateCumulativeReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "viewRewardAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "viewUpdatedCumulativeReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x86e471a0fa252238c1a2cffa2a27d441bc2de0157e991071ba3018e4d95618a0",
  "receipt": {
    "to": null,
    "from": "0x23292e9BA8434e59E6BAC1907bA7425211c4DE27",
    "contractAddress": "0x998effB5725812f5f2cFdF87f10Bd9ae96dAf1d8",
    "transactionIndex": 1,
    "gasUsed": "991315",
    "logsBloom": "0x
    "blockHash": "0x47539738abd874de28fb0bbd5aabb7b783ea6908b7fe1c72469eba2fde2fa912",
    "transactionHash": "0x86e471a0fa252238c1a2cffa2a27d441bc2de0157e991071ba3018e4d95618a0",
    "logs": [],
    "blockNumber": 3427212,
    "cumulativeGasUsed": "1122052",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x9Fda7cEeC4c18008096C2fE2B85F05dc300F94d0",
    "86805555555555555",
    "0xA7b937f2601353f8116872f3CbeBB56D8300A9A3"
  ],
  "solcInputHash": "177459222520c2cada5f3985c2d48197",
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_MFI\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialRewardPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_roles\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"MFI\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"add2RewardTarget\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cumulativeReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastCumulativeUpdateBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"removeFromRewardTarget\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardTarget\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardPerBlock\",\"type\":\"uint256\"}],\"name\":\"setTotalRewardPerBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakeAccounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cumulativeStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockEnd\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalCurrentRewardPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalCurrentWeights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateCumulativeReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"viewRewardAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewUpdatedCumulativeReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"MFI()\":{\"notice\":\"Margenswap (MFI) token address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MFIStaking.sol\":\"MFIStaking\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x99f5c21018d796db7833a2100bb0e7411999e248a3c950fb526eee5d2bf47cb7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"},\"contracts/MFIStaking.sol\":{\"content\":\"import \\\"./TokenStaking.sol\\\";\\n\\ncontract MFIStaking is TokenStaking {\\n    constructor(\\n        address _MFI,\\n        uint256 initialRewardPerBlock,\\n        address _roles\\n    ) TokenStaking(_MFI, _MFI, initialRewardPerBlock, _roles) {}\\n}\\n\",\"keccak256\":\"0x82c42af2d5c03376a85da4a5cb568365298b4618acf4398554cda03ba1080272\"},\"contracts/Roles.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"../interfaces/IDependencyController.sol\\\";\\n\\n// we chose not to go with an enum\\n// to make this list easy to extend\\nuint256 constant FUND_TRANSFERER = 1;\\nuint256 constant MARGIN_CALLER = 2;\\nuint256 constant BORROWER = 3;\\nuint256 constant MARGIN_TRADER = 4;\\nuint256 constant FEE_SOURCE = 5;\\nuint256 constant LIQUIDATOR = 6;\\nuint256 constant AUTHORIZED_FUND_TRADER = 7;\\nuint256 constant INCENTIVE_REPORTER = 8;\\nuint256 constant TOKEN_ACTIVATOR = 9;\\nuint256 constant STAKE_PENALIZER = 10;\\nuint256 constant LENDER = 11;\\n\\nuint256 constant FUND = 101;\\nuint256 constant LENDING = 102;\\nuint256 constant MARGIN_ROUTER = 103;\\nuint256 constant CROSS_MARGIN_TRADING = 104;\\nuint256 constant FEE_CONTROLLER = 105;\\nuint256 constant PRICE_CONTROLLER = 106;\\nuint256 constant ADMIN = 107;\\nuint256 constant INCENTIVE_DISTRIBUTION = 108;\\nuint256 constant TOKEN_ADMIN = 109;\\n\\nuint256 constant DISABLER = 1001;\\nuint256 constant DEPENDENCY_CONTROLLER = 1002;\\n\\n/// @title Manage permissions of contracts and ownership of everything\\n/// owned by a multisig wallet (0xEED9D1c6B4cdEcB3af070D85bfd394E7aF179CBd) during\\n/// beta and will then be transfered to governance\\n/// https://github.com/marginswap/governance\\ncontract Roles is Ownable {\\n    mapping(address => mapping(uint256 => bool)) public roles;\\n    mapping(uint256 => address) public mainCharacters;\\n\\n    constructor() Ownable() {\\n        // token activation from the get-go\\n        roles[msg.sender][TOKEN_ACTIVATOR] = true;\\n    }\\n\\n    /// @dev Throws if called by any account other than the owner.\\n    modifier onlyOwnerExecDepController() {\\n        require(\\n            owner() == msg.sender ||\\n                executor() == msg.sender ||\\n                mainCharacters[DEPENDENCY_CONTROLLER] == msg.sender,\\n            \\\"Roles: caller is not the owner\\\"\\n        );\\n        _;\\n    }\\n\\n    function giveRole(uint256 role, address actor)\\n        external\\n        onlyOwnerExecDepController\\n    {\\n        roles[actor][role] = true;\\n    }\\n\\n    function removeRole(uint256 role, address actor)\\n        external\\n        onlyOwnerExecDepController\\n    {\\n        roles[actor][role] = false;\\n    }\\n\\n    function setMainCharacter(uint256 role, address actor)\\n        external\\n        onlyOwnerExecDepController\\n    {\\n        mainCharacters[role] = actor;\\n    }\\n\\n    function getRole(uint256 role, address contr) external view returns (bool) {\\n        return roles[contr][role];\\n    }\\n\\n    /// @dev current executor\\n    function executor() public returns (address exec) {\\n        address depController = mainCharacters[DEPENDENCY_CONTROLLER];\\n        if (depController != address(0)) {\\n            exec = IDependencyController(depController).currentExecutor();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x7ba8d9671c7dd24ae361f1531b6fa8f10af7a8a47a38c27eb0a3fe8fc1e23ae7\",\"license\":\"BUSL-1.1\"},\"contracts/TokenStaking.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"./Roles.sol\\\";\\n\\nstruct StakeAccount {\\n    uint256 stakeAmount;\\n    uint256 stakeWeight;\\n    uint256 cumulativeStart;\\n    uint256 lockEnd;\\n}\\n\\nabstract contract TokenStaking {\\n    using SafeERC20 for IERC20;\\n\\n    IERC20 public immutable stakeToken;\\n    /// Margenswap (MFI) token address\\n    IERC20 public immutable MFI;\\n    Roles roles;\\n\\n    mapping(address => StakeAccount) public stakeAccounts;\\n\\n    uint256 public cumulativeReward;\\n    uint256 public lastCumulativeUpdateBlock;\\n    uint256 public totalCurrentWeights;\\n    uint256 public totalCurrentRewardPerBlock;\\n    uint256 public rewardTarget;\\n\\n    constructor(\\n        address _MFI,\\n        address _stakeToken,\\n        uint256 initialRewardPerBlock,\\n        address _roles\\n    ) {\\n        MFI = IERC20(_MFI);\\n        stakeToken = IERC20(_stakeToken);\\n        roles = Roles(_roles);\\n\\n        lastCumulativeUpdateBlock = block.number;\\n        totalCurrentRewardPerBlock = initialRewardPerBlock;\\n    }\\n\\n    // TODO: function to load up with MFI\\n\\n    function setTotalRewardPerBlock(uint256 rewardPerBlock) external {\\n        require(\\n            msg.sender == roles.owner() || msg.sender == roles.executor(),\\n            \\\"Not authorized\\\"\\n        );\\n        updateCumulativeReward();\\n        totalCurrentRewardPerBlock = rewardPerBlock;\\n    }\\n\\n    function add2RewardTarget(uint256 amount) external {\\n        MFI.safeTransferFrom(msg.sender, address(this), amount);\\n        updateCumulativeReward();\\n        rewardTarget += amount;\\n    }\\n\\n    function removeFromRewardTarget(uint256 amount, address recipient)\\n        external\\n    {\\n        require(\\n            msg.sender == roles.owner() || msg.sender == roles.executor(),\\n            \\\"Not authorized\\\"\\n        );\\n        MFI.safeTransfer(recipient, amount);\\n        updateCumulativeReward();\\n        rewardTarget -= amount;\\n        require(rewardTarget >= cumulativeReward, \\\"Trying to remove too much\\\");\\n    }\\n\\n    function stake(uint256 amount, uint256 duration) external {\\n        stakeToken.safeTransferFrom(msg.sender, address(this), amount);\\n\\n        StakeAccount storage account = stakeAccounts[msg.sender];\\n        uint256 extantAmount = account.stakeAmount;\\n\\n        if (extantAmount > 0) {\\n            _withdrawReward(msg.sender, account);\\n        }\\n\\n        account.stakeAmount = extantAmount + amount;\\n        uint256 w =\\n            duration >= 90 days\\n                ? 3\\n                : (duration >= 30 days ? 2 : (duration >= 1 weeks ? 1 : 0));\\n        account.stakeWeight += w * amount;\\n        totalCurrentWeights += w * amount;\\n        account.cumulativeStart = updateCumulativeReward();\\n\\n        account.lockEnd = max(block.timestamp + duration, account.lockEnd);\\n    }\\n\\n    function withdrawStake(uint256 amount) external {\\n        StakeAccount storage account = stakeAccounts[msg.sender];\\n        require(block.timestamp >= account.lockEnd, \\\"Stake is still locked\\\");\\n        _withdrawReward(msg.sender, account);\\n        uint256 weightDiff =\\n            (amount * account.stakeWeight) / account.stakeAmount;\\n        account.stakeWeight -= weightDiff;\\n        totalCurrentWeights -= weightDiff;\\n        account.stakeAmount -= amount;\\n        account.cumulativeStart = updateCumulativeReward();\\n    }\\n\\n    function viewUpdatedCumulativeReward() public view returns (uint256) {\\n        return\\n            min(\\n                rewardTarget,\\n                cumulativeReward +\\n                    (block.number - lastCumulativeUpdateBlock) *\\n                    totalCurrentRewardPerBlock\\n            );\\n    }\\n\\n    function updateCumulativeReward() public returns (uint256) {\\n        if (block.number > lastCumulativeUpdateBlock) {\\n            cumulativeReward = viewUpdatedCumulativeReward();\\n            lastCumulativeUpdateBlock = block.number;\\n        }\\n        return cumulativeReward;\\n    }\\n\\n    function _viewRewardAmount(StakeAccount storage account)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 totalReward = viewUpdatedCumulativeReward();\\n        return\\n            ((totalReward - account.cumulativeStart) * account.stakeWeight) /\\n            (totalCurrentWeights + 1);\\n    }\\n\\n    function viewRewardAmount(address account) external view returns (uint256) {\\n        return _viewRewardAmount(stakeAccounts[account]);\\n    }\\n\\n    function _withdrawReward(address recipient, StakeAccount storage account)\\n        internal\\n    {\\n        if (account.stakeWeight > 0) {\\n            uint256 reward =\\n                min(_viewRewardAmount(account), MFI.balanceOf(address(this)));\\n\\n            MFI.safeTransfer(recipient, reward);\\n        }\\n    }\\n\\n    function withdrawReward() external {\\n        StakeAccount storage account = stakeAccounts[msg.sender];\\n        _withdrawReward(msg.sender, account);\\n        account.cumulativeStart = cumulativeReward;\\n    }\\n\\n    /// @dev minimum\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a > b) {\\n            return b;\\n        } else {\\n            return a;\\n        }\\n    }\\n\\n    /// @dev maximum\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a > b) {\\n            return a;\\n        } else {\\n            return b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x79a6f7d809969c7c86ae2b98cfe49959d0016e32e7c09babcdf13c932a94fea1\",\"license\":\"BUSL-1.1\"},\"interfaces/IDependencyController.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.0;\\n\\ninterface IDependencyController {\\n    function currentExecutor() external returns (address);\\n}\\n\",\"keccak256\":\"0xc65a455a81ab4bc8e0737d03691c159f28bfd6885ef8b99ddd8dec558ccfeb32\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "0x60c060405234801561001057600080fd5b506040516110d03803806110d083398101604081905261002f9161008f565b60609290921b6001600160601b03191660a0819052608052600080546001600160a01b0319166001600160a01b0390931692909217909155436003556005556100ca565b80516001600160a01b038116811461008a57600080fd5b919050565b6000806000606084860312156100a3578283fd5b6100ac84610073565b9250602084015191506100c160408501610073565b90509250925092565b60805160601c60a05160601c610fb86101186000396000818161026d0152818161042001528181610875015281816109d90152610a6a015260008181610162015261075a0152610fb86000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806382751982116100a2578063c8d65d5911610071578063c8d65d59146101f7578063dbe85f70146101ff578063e57466fd14610212578063ed29c12b14610268578063fb3935ee1461028f5761010b565b806382751982146101ca578063b675e13c146101d3578063c1e4db56146101e6578063c885bc58146101ef5761010b565b806351ed6a30116100de57806351ed6a301461015d5780635fc754b21461019c5780636eb2d89a146101a45780637b0472f0146101b75761010b565b80631bef6b701461011057806320ef8c061461012557806325d5971f146101415780634fbfa2fc14610154575b600080fd5b61012361011e366004610e1b565b610298565b005b61012e60035481565b6040519081526020015b60405180910390f35b61012361014f366004610deb565b6104bf565b61012e60055481565b6101847f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610138565b61012e6105a6565b6101236101b2366004610deb565b6105c9565b6101236101c5366004610e4a565b61074d565b61012e60065481565b6101236101e1366004610deb565b610868565b61012e60025481565b6101236108c0565b61012e6108e3565b61012e61020d366004610d93565b61091d565b610248610220366004610d93565b6001602081905260009182526040909120805491810154600282015460039092015490919084565b604080519485526020850193909352918301526060820152608001610138565b6101847f000000000000000000000000000000000000000000000000000000000000000081565b61012e60045481565b60008054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156102e457600080fd5b505afa1580156102f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031c9190610daf565b6001600160a01b0316336001600160a01b031614806103d1575060008054906101000a90046001600160a01b03166001600160a01b031663c34c08e56040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561038457600080fd5b505af1158015610398573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bc9190610daf565b6001600160a01b0316336001600160a01b0316145b6104135760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064015b60405180910390fd5b6104476001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168284610944565b61044f6105a6565b5081600660008282546104629190610f11565b909155505060025460065410156104bb5760405162461bcd60e51b815260206004820152601960248201527f547279696e6720746f2072656d6f766520746f6f206d75636800000000000000604482015260640161040a565b5050565b336000908152600160205260409020600381015442101561051a5760405162461bcd60e51b815260206004820152601560248201527414dd185ad9481a5cc81cdd1a5b1b081b1bd8dad959605a1b604482015260640161040a565b61052433826109ac565b80546001820154600091906105399085610ef2565b6105439190610ed2565b9050808260010160008282546105599190610f11565b9250508190555080600460008282546105729190610f11565b909155505081548390839060009061058b908490610f11565b9091555061059990506105a6565b8260020181905550505050565b60006003544311156105c2576105ba6108e3565b600255436003555b5060025490565b60008054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561061557600080fd5b505afa158015610629573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064d9190610daf565b6001600160a01b0316336001600160a01b03161480610702575060008054906101000a90046001600160a01b03166001600160a01b031663c34c08e56040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156106b557600080fd5b505af11580156106c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ed9190610daf565b6001600160a01b0316336001600160a01b0316145b61073f5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b604482015260640161040a565b6107476105a6565b50600555565b6107826001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333085610a91565b336000908152600160205260409020805480156107a3576107a333836109ac565b6107ad8482610eba565b825560006276a7008410156107e95762278d008410156107e15762093a808410156107d95760006107dc565b60015b6107e4565b60025b6107ec565b60035b60ff1690506107fb8582610ef2565b83600101600082825461080e9190610eba565b9091555061081e90508582610ef2565b6004600082825461082f9190610eba565b9091555061083d90506105a6565b600284015561085961084f8542610eba565b8460030154610acf565b83600301819055505050505050565b61089d6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084610a91565b6108a56105a6565b5080600660008282546108b89190610eba565b909155505050565b336000818152600160205260409020906108da90826109ac565b60028054910155565b6000610918600654600554600354436108fc9190610f11565b6109069190610ef2565b6002546109139190610eba565b610ae6565b905090565b6001600160a01b038116600090815260016020526040812061093e90610afe565b92915050565b6040516001600160a01b0383166024820152604481018290526109a790849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610b49565b505050565b6001810154156104bb576000610a5b6109c483610afe565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015610a2357600080fd5b505afa158015610a37573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109139190610e03565b90506109a76001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168483610944565b6040516001600160a01b0380851660248301528316604482015260648101829052610ac99085906323b872dd60e01b90608401610970565b50505050565b600081831115610ae057508161093e565b50919050565b600081831115610af757508061093e565b508161093e565b600080610b096108e3565b90506004546001610b1a9190610eba565b60018401546002850154610b2e9084610f11565b610b389190610ef2565b610b429190610ed2565b9392505050565b6000610b9e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610c1b9092919063ffffffff16565b8051909150156109a75780806020019051810190610bbc9190610dcb565b6109a75760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161040a565b6060610c2a8484600085610c32565b949350505050565b606082471015610c935760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161040a565b843b610ce15760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161040a565b600080866001600160a01b03168587604051610cfd9190610e6b565b60006040518083038185875af1925050503d8060008114610d3a576040519150601f19603f3d011682016040523d82523d6000602084013e610d3f565b606091505b5091509150610d4f828286610d5a565b979650505050505050565b60608315610d69575081610b42565b825115610d795782518084602001fd5b8160405162461bcd60e51b815260040161040a9190610e87565b600060208284031215610da4578081fd5b8135610b4281610f6a565b600060208284031215610dc0578081fd5b8151610b4281610f6a565b600060208284031215610ddc578081fd5b81518015158114610b42578182fd5b600060208284031215610dfc578081fd5b5035919050565b600060208284031215610e14578081fd5b5051919050565b60008060408385031215610e2d578081fd5b823591506020830135610e3f81610f6a565b809150509250929050565b60008060408385031215610e5c578182fd5b50508035926020909101359150565b60008251610e7d818460208701610f28565b9190910192915050565b6000602082528251806020840152610ea6816040850160208701610f28565b601f01601f19169190910160400192915050565b60008219821115610ecd57610ecd610f54565b500190565b600082610eed57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610f0c57610f0c610f54565b500290565b600082821015610f2357610f23610f54565b500390565b60005b83811015610f43578181015183820152602001610f2b565b83811115610ac95750506000910152565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610f7f57600080fd5b5056fea2646970667358221220d5f58b1922b77f685d32c9fbd0511d0297a2d3f7e67bfa87951de4e09780abab64736f6c63430008030033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "MFI()": {
        "notice": "Margenswap (MFI) token address"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 12526,
        "contract": "contracts/MFIStaking.sol:MFIStaking",
        "label": "roles",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(Roles)10727"
      },
      {
        "astId": 12531,
        "contract": "contracts/MFIStaking.sol:MFIStaking",
        "label": "stakeAccounts",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_struct(StakeAccount)12512_storage)"
      },
      {
        "astId": 12533,
        "contract": "contracts/MFIStaking.sol:MFIStaking",
        "label": "cumulativeReward",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 12535,
        "contract": "contracts/MFIStaking.sol:MFIStaking",
        "label": "lastCumulativeUpdateBlock",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 12537,
        "contract": "contracts/MFIStaking.sol:MFIStaking",
        "label": "totalCurrentWeights",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 12539,
        "contract": "contracts/MFIStaking.sol:MFIStaking",
        "label": "totalCurrentRewardPerBlock",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 12541,
        "contract": "contracts/MFIStaking.sol:MFIStaking",
        "label": "rewardTarget",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(Roles)10727": {
        "encoding": "inplace",
        "label": "contract Roles",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(StakeAccount)12512_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct StakeAccount)",
        "numberOfBytes": "32",
        "value": "t_struct(StakeAccount)12512_storage"
      },
      "t_struct(StakeAccount)12512_storage": {
        "encoding": "inplace",
        "label": "struct StakeAccount",
        "members": [
          {
            "astId": 12505,
            "contract": "contracts/MFIStaking.sol:MFIStaking",
            "label": "stakeAmount",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 12507,
            "contract": "contracts/MFIStaking.sol:MFIStaking",
            "label": "stakeWeight",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 12509,
            "contract": "contracts/MFIStaking.sol:MFIStaking",
            "label": "cumulativeStart",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 12511,
            "contract": "contracts/MFIStaking.sol:MFIStaking",
            "label": "lockEnd",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}